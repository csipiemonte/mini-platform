{
  "children": [
    {
      "browserwarnmsg": "Please use Google Chrome, Apple Safari or another supported browser.", 
      "obfuscation": "", 
      "EULA": "", 
      "cached_js": "", 
      "ChromeAppLaunch": "chrome.app.runtime.onLaunched.addListener(function() {{\n  chrome.app.window.create(\"index.html\", {{\n    \"bounds\": {{\"width\": {appwidth}, \"height\": {appheight} }}\n  }})\n}});", 
      "iconAndroid": "nsb/images/192.png", 
      "expanded_pmp": true, 
      "fontFamily": "helvetica", 
      "ChromeManifest": "{{ \"manifest_version\": 2,\n  \"name\": \"{title}\",\n  \"version\": \"{version}\",\n  \"offline_enabled\": true,\n  \"description\": \"{description}\",\n  \"display_in_launcher\": true,\n  \"display_in_new_tab_page\": true,\n  \"short_name\": \"{title}\",\n  \"icons\": {{ \"16\": \"{_nsbdir}nsb/images/16.png\",\n            \"128\": \"{_nsbdir}nsb/images/128.png\" }},\n  \"author\": \"{copyright}\",\n  \"app\": {{\"background\": {{\"scripts\": [\"background.js\"]}}}}}}", 
      "onresize": "", 
      "manifestFile": "appcache", 
      "phoneGapBuildID": "", 
      "firstform": "frmHome", 
      "style": "", 
      "FastClick": "true", 
      "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
      "copyright": "Copyright 2015 ABC Company", 
      "script": "", 
      "!type": "Page", 
      "id": "YUNClient", 
      "theme": "a", 
      "version": "2.0.0", 
      "rtl": "", 
      "phoneGapDebugger": false, 
      "manifestName": "OfflineApp", 
      "children": [
        {
          "fullScreen": "true", 
          "onsubmit": "", 
          "cached_js": "var client;\nvar client2;\n\nfunction Main() {\n  lTemp1.Width = 0;\n  lTemp2.Width = 0;\n  lineHide.Visible = True;\n}\n\n\nbtnOAuth1.onclick = function() { var savethefunction_rvar=\"\";\n var line1,line2,line3,plot1,plot2,plot3,options1,options2,options3,query,ris;\n\n  query = \"http://api.smartdatanet.it/odata/SmartDataOdataService.svc/ds_Environment_147/Measures?$orderby=%20time%20desc&$top=60&$format=json\";\nvar xmlhttp;\n      var post;\n      xmlhttp=new XMLHttpRequest();\n      xmlhttp.open('GET', query, false);\n      xmlhttp.send();\n      ris = xmlhttp.responseText;\n      \nobJSON = JSON.parse(ris);\n\n   line1 = [];\n   line2 = [];\n   line3 = [];\n\n   for   (i = 0; i  <= obJSON.d.results.length -1; i ++) {\n       l = obJSON.d.results[i].luminosita;\n       u = obJSON.d.results[i].umidita;\n       t = obJSON.d.results[i].temperatura;\n       line1[i] = [i,Math.floor(l)];\n       line2[i] = [i,Math.floor(t)];\n       line3[i] = [i,Math.floor(u)];\n   }\n\n  options1={}\n  options1.title=\"Luminosity - Last 60 measures\";\n  options1.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options1.series=[{showMarker:False},{lineWidth:1}];\n  options2={}\n  options2.title=\"Temperature - Last 60 measures\";\n  options2.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options2.series=[{showMarker:False},{lineWidth:1}];\n  options3={}\n  options3.title=\"Humidity - Last 60 measures\";\n  options3.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options3.series=[{showMarker:False},{lineWidth:1}];\n\n  plot1 = $.jqplot(\"chart1\" , [line1], options1);\n  plot2 = $.jqplot(\"chart2\" , [line2], options2);\n  plot3 = $.jqplot(\"chart3\" , [line3], options3);\n\nreturn savethefunction_rvar; }\n\n\nbtnOAuth2.onclick = function() { var savethefunction_rvar=\"\";\n   var line1,line2,line3,plot1,plot2,plot3,options1,options2,options3,query,ris;\n\n  query = \"https://api.smartdatanet.it:443/api/ds_Environcorre_148/Measures?$orderby=%20time%20desc&$top=60&$format=json\";\n  tx = \"Bearer \" + txtToken.value;\nvar xmlhttp2;\n      var post;\n      xmlhttp2=new XMLHttpRequest();\n      xmlhttp2.open('GET', query, false);\n      xmlhttp2.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      xmlhttp2.setRequestHeader('Authorization', tx);\n      xmlhttp2.send();\n      ris = xmlhttp2.responseText;\n      \nobJSON = JSON.parse(ris);\n\n   line1 = [];\n   line2 = [];\n   line3 = [];\n\n   for   (i = 0; i  <= obJSON.d.results.length -1; i ++) {\n       l = obJSON.d.results[i].luminosita;\n       u = obJSON.d.results[i].umidita;\n       t = obJSON.d.results[i].temperatura;\n       line1[i] = [i,Math.floor(l)];\n       line2[i] = [i,Math.floor(t)];\n       line3[i] = [i,Math.floor(u)];\n   }\n\n  options1={}\n  options1.title=\"Luminosity - Last 60 measures\";\n  options1.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options1.series=[{showMarker:False},{lineWidth:1}];\n  options2={}\n  options2.title=\"Temperature - Last 60 measures\";\n  options2.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options2.series=[{showMarker:False},{lineWidth:1}];\n  options3={}\n  options3.title=\"Humidity - Last 60 measures\";\n  options3.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options3.series=[{showMarker:False},{lineWidth:1}];\n\n  plot1 = $.jqplot(\"chart1o\" , [line1], options1);\n  plot2 = $.jqplot(\"chart2o\" , [line2], options2);\n  plot3 = $.jqplot(\"chart3o\" , [line3], options3);\nreturn savethefunction_rvar; }\n\nFlipToggle1.onclick = function() { var savethefunction_rvar=\"\";\n    if(FlipToggle1.value() == \"On\") {\n        lineHide.Visible = False;\n } else {\n        lineHide.Visible = True;\n    }\nreturn savethefunction_rvar; }\n\nfunction calcolaWidthT(x) { var savethefunction_rvar=\"\";\n    savethefunction_rvar  = x * 3;\nreturn savethefunction_rvar; }\n\nfunction calcolaWidthL(x) { var savethefunction_rvar=\"\";\n    savethefunction_rvar  = 285 - ((1024 - x) * 0.278);\nreturn savethefunction_rvar; }\n\nbtnConnect.onclick = function() { var savethefunction_rvar=\"\";\n\n    if(btnConnect.value == \"Connect\") {\n      client = Stomp.client(txtServer.text);\n      client.connect(txtUser.text, txtPWD.text, connectCallBack, errorCallback);\n      btnConnect.value = \"Logout\";\n } else {\n      client.disconnect(disconnectCallback);\n      btnConnect.value = \"Connect\";\n  }\nreturn savethefunction_rvar; }\n\nfunction connectCallBack(x) {\n    client.subscribe(txtStream1.text, messageCallback);\n    _msgbox_confirm(\"Conected\");\n}\n\nfunction disconnectCallback(x) {\n  _msgbox_confirm(\"Disconnected\");\n}\n\n\nfunction errorCallback(x) {\n  _msgbox_confirm(\"Connection Error \" + x);\n  btnConnect.value = \"Connect\";\n}\n\nfunction messageCallback(x) {\n var jsText;\n var obJSON;\n var temperature;\n var luminosity;\n var btn;\n var humidity;\n\n // remove the stomp header\n  jsText =\"\"  +  x;\n  p =  InStr(jsText, \"{\");\n  jsText = Mid(jsText, p);\n\n // convert the JSON to an object\n  obJSON = JSON.parse(jsText);\n\n  lblTS1.Caption = obJSON.values[0].time;\n\n  temperature = obJSON.values[0].components.temperatura;\n  lTemp1.Width = calcolaWidthT(Math.floor(temperature) + 20);\n  lblTemperatura.Caption = \"Temperature = \" + temperature + \" \u00b0C\";\n\n  btn = obJSON.values[0].components.switch;\n  if(btn == \"0\") {\n      imgButton.src = \"img/luceoff.png\";\n } else {\n      imgButton.src = \"img/luceon.png\";\n  }\n\n  humidity = obJSON.values[0].components.umidita;\n\n  lblIgro.Caption = humidity + \" %\";\n\n  luminosity = obJSON.values[0].components.luminosita;\n  l = Math.floor(luminosity);\n  lLum.Width = calcolaWidthL(l);\n  lLum.Left = 85 + (285 - lLum.Width);\n  lPerc.Caption = luminosity;\n\n}\n\nbtnConnect2.onclick = function() { var savethefunction_rvar=\"\";\n      if(btnConnect2.value == \"Connect\") {\n      client2 = Stomp.client(txtServer.text);\n      client2.connect(\"Bearer \" + txtToken.text, \"\" , connectCallBack2, errorCallback2);\n      btnConnect2.value = \"Logout\";\n } else {\n      client2.disconnect(disconnectCallback);\n      btnConnect2.value = \"Connect\";\n  }\nreturn savethefunction_rvar; }\n\nfunction connectCallBack2(x) {\n    client2.subscribe(txtStream2.text, messageCallback2);\n    _msgbox_confirm(\"Conected\");\n}\n\nfunction disconnectCallback2(x) {\n  _msgbox_confirm(\"Disconnected\");\n}\n\n\nfunction errorCallback2(x) {\n  _msgbox_confirm(\"Connection Error \" + x);\n  btnConnect.value = \"Connect\";\n}\n\nfunction messageCallback2(x) {\n var jsText;\n var obJSON;\n var temperature;\n var luminosity;\n var btn;\n var humidity;\n\n // remove the stomp header\n  jsText =\"\"  +  x;\n  p =  InStr(jsText, \"{\");\n  jsText = Mid(jsText, p);\n\n // convert the JSON to an object\n  obJSON = JSON.parse(jsText);\n\n  lblTS2.Caption = obJSON.values[0].time;\n\n  temperature = obJSON.values[0].components.temperatura;\n  lTemp2.Width = calcolaWidthT(Math.floor(temperature) + 20);\n  lblTemperatura2.Caption = \"Temperature = \" + temperature + \" \u00b0C\";\n\n   humidity = obJSON.values[0].components.umidita;\n\n  lblIgro2.Caption = humidity + \" %\";\n\n  luminosity = obJSON.values[0].components.luminosita;\n\n  lblLux.Caption = Math.floor(luminosity) + \" %\";\n\n}\n\n\n", 
          "onkeypress": "", 
          "_uuid": "5b9e2e6268a84f0ead5dee46ddbe9cd4", 
          "height": 1700, 
          "scroll_options": "mouseWheel:true, scrollbars:true, bounce:true, zoom:false", 
          "background": "", 
          "locked": false, 
          "expanded_pmp": true, 
          "scrolling": "false", 
          "id": "frmHome", 
          "openMode": "none", 
          "style": "", 
          "cached_js_script_hash": "f3821c46c66e094d5eac7883ca2904d1", 
          "language": "BASIC", 
          "onshow": "", 
          "script": "Dim client\nDim client2\n\nSub Main()\n  lTemp1.Width = 0\n  lTemp2.Width = 0\n  lineHide.Visible = True\nEnd Sub\n\n\nFunction btnOAuth1_onclick()\n  Dim line1, line2, line3, plot1, plot2, plot3, options1, options2, options3, query, ris\n  \n  query = \"http://api.smartdatanet.it/odata/SmartDataOdataService.svc/ds_Environment_147/Measures?$orderby=%20time%20desc&$top=60&$format=json\"\n  \n  JavaScript\n      var xmlhttp;\n      var post;\n      xmlhttp=new XMLHttpRequest();\n      xmlhttp.open('GET', query, false);\n      xmlhttp.send();\n      ris = xmlhttp.responseText;\n      \n  End JavaScript\n \n   obJSON = JSON.parse(ris)\n   \n   line1 = []\n   line2 = []\n   line3 = []\n   \n   For i = 0 To obJSON.d.results.length -1\n       l = obJSON.d.results[i].luminosita\n       u = obJSON.d.results[i].umidita\n       t = obJSON.d.results[i].temperatura\n       line1[i] = [i,Int(l)]\n       line2[i] = [i,Int(t)]\n       line3[i] = [i,Int(u)]\n   Next \n  \n  options1={}\n  options1.title=\"Luminosity - Last 60 measures\"\n  options1.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options1.series=[{showMarker:False},{lineWidth:1}]\n  options2={}\n  options2.title=\"Temperature - Last 60 measures\"\n  options2.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options2.series=[{showMarker:False},{lineWidth:1}]\n  options3={}\n  options3.title=\"Humidity - Last 60 measures\"\n  options3.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options3.series=[{showMarker:False},{lineWidth:1}]\n\n  plot1 = $.jqplot(\"chart1\", [line1], options1)\n  plot2 = $.jqplot(\"chart2\", [line2], options2)\n  plot3 = $.jqplot(\"chart3\", [line3], options3)\n\nEnd Function\n\n\nFunction btnOAuth2_onclick()\n    Dim line1, line2, line3, plot1, plot2, plot3, options1, options2, options3, query, ris\n  \n  query = \"https://api.smartdatanet.it:443/api/ds_Environcorre_148/Measures?$orderby=%20time%20desc&$top=60&$format=json\"\n  tx = \"Bearer \" + txtToken.value\n  JavaScript\n      var xmlhttp2;\n      var post;\n      xmlhttp2=new XMLHttpRequest();\n      xmlhttp2.open('GET', query, false);\n      xmlhttp2.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n      xmlhttp2.setRequestHeader('Authorization', tx);\n      xmlhttp2.send();\n      ris = xmlhttp2.responseText;\n      \n  End JavaScript\n \n   obJSON = JSON.parse(ris)\n   \n   line1 = []\n   line2 = []\n   line3 = []\n   \n   For i = 0 To obJSON.d.results.length -1\n       l = obJSON.d.results[i].luminosita\n       u = obJSON.d.results[i].umidita\n       t = obJSON.d.results[i].temperatura\n       line1[i] = [i,Int(l)]\n       line2[i] = [i,Int(t)]\n       line3[i] = [i,Int(u)]\n   Next \n  \n  options1={}\n  options1.title=\"Luminosity - Last 60 measures\"\n  options1.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options1.series=[{showMarker:False},{lineWidth:1}]\n  options2={}\n  options2.title=\"Temperature - Last 60 measures\"\n  options2.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options2.series=[{showMarker:False},{lineWidth:1}]\n  options3={}\n  options3.title=\"Humidity - Last 60 measures\"\n  options3.axes={xaxis: {renderer:$.jqplot.CanvasAxisLabelRenderer}, yaxis:{min: 0}}\n  options3.series=[{showMarker:False},{lineWidth:1}]\n\n  plot1 = $.jqplot(\"chart1o\", [line1], options1)\n  plot2 = $.jqplot(\"chart2o\", [line2], options2)\n  plot3 = $.jqplot(\"chart3o\", [line3], options3)\nEnd Function\n\nFunction FlipToggle1_onclick()\n    If FlipToggle1.value() = \"On\" Then\n        lineHide.Visible = False\n    Else\n        lineHide.Visible = True\n    End If \nEnd Function\n\nFunction calcolaWidthT(x)\n   calcolaWidthT = x * 3\nEnd Function\n\nFunction calcolaWidthL(x)\n   calcolaWidthL = 285 - ((1024 - x) * 0.278)\nEnd Function\n\nFunction btnConnect_onclick()\n    \n    If btnConnect.value = \"Connect\" Then\n      client = Stomp.client(txtServer.text)\n      client.connect(txtUser.text, txtPWD.text, connectCallBack, errorCallback)\n      btnConnect.value = \"Logout\"\n  Else\n      client.disconnect(disconnectCallback)\n      btnConnect.value = \"Connect\"\n  End If \nEnd Function\n\nSub connectCallBack(x)\n    client.subscribe(txtStream1.text, messageCallback)\n    MsgBox \"Conected\"\nEnd Sub\n\nSub disconnectCallback(x)\n  MsgBox \"Disconnected\"\nEnd Sub \n\nSub errorCallback(x)\n  MsgBox \"Connection Error \" + x\n  btnConnect.value = \"Connect\"\nEnd Sub\n\nSub messageCallback(x)\n  Dim jsText\n  Dim obJSON\n  Dim temperature\n  Dim luminosity\n  Dim btn\n  Dim humidity\n  \n  ' remove the stomp header\n  jsText =\"\" & x\n  p =  InStr(jsText, \"{\")\n  jsText = Mid(jsText, p)\n  \n  ' convert the JSON to an object\n  obJSON = JSON.parse(jsText)\n  \n  lblTS1.Caption = obJSON.values[0].time\n  \n  temperature = obJSON.values[0].components.temperatura\n  lTemp1.Width = calcolaWidthT(Int(temperature) + 20)\n  lblTemperatura.Caption = \"Temperature = \" + temperature + \" \u00b0C\"\n  \n  btn = obJSON.values[0].components.switch\n  If btn = \"0\" Then\n      imgButton.src = \"img/luceoff.png\" \n  Else\n      imgButton.src = \"img/luceon.png\" \n  End If\n  \n  humidity = obJSON.values[0].components.umidita\n  \n  lblIgro.Caption = humidity + \" %\"\n  \n  luminosity = obJSON.values[0].components.luminosita\n  l = Int(luminosity)\n  lLum.width = calcolaWidthL(l)\n  lLum.Left = 85 + (285 - lLum.Width)\n  lPerc.Caption = luminosity\n  \nEnd Sub\n\nFunction btnConnect2_onclick()\n      If btnConnect2.value = \"Connect\" Then\n      client2 = Stomp.client(txtServer.text)\n      client2.connect(\"Bearer \" + txtToken.text, \"\", connectCallBack2, errorCallback2)\n      btnConnect2.value = \"Logout\"\n  Else\n      client2.disconnect(disconnectCallback)\n      btnConnect2.value = \"Connect\"\n  End If \nEnd Function\n\nSub connectCallBack2(x)\n    client2.subscribe(txtStream2.text, messageCallback2)\n    MsgBox \"Conected\"\nEnd Sub\n\nSub disconnectCallback2(x)\n  MsgBox \"Disconnected\"\nEnd Sub \n\nSub errorCallback2(x)\n  MsgBox \"Connection Error \" + x\n  btnConnect.value = \"Connect\"\nEnd Sub\n\nSub messageCallback2(x)\n  Dim jsText\n  Dim obJSON\n  Dim temperature\n  Dim luminosity\n  Dim btn\n  Dim humidity\n  \n  ' remove the stomp header\n  jsText =\"\" & x\n  p =  InStr(jsText, \"{\")\n  jsText = Mid(jsText, p)\n  \n  ' convert the JSON to an object\n  obJSON = JSON.parse(jsText)\n  \n  lblTS2.Caption = obJSON.values[0].time\n  \n  temperature = obJSON.values[0].components.temperatura\n  lTemp2.Width = calcolaWidthT(Int(temperature) + 20)\n  lblTemperatura2.Caption = \"Temperature = \" + temperature + \" \u00b0C\"\n  \n   humidity = obJSON.values[0].components.umidita\n  \n  lblIgro2.Caption = humidity + \" %\"\n  \n  luminosity = obJSON.values[0].components.luminosita\n  \n  lblLux.Caption = Int(luminosity) + \" %\"\n  \nEnd Sub\n\n\n", 
          "top": 0, 
          "!type": "Form", 
          "onhide": "", 
          "children": [
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "0a5ec26c2f6140268d517d750f46128b", 
              "height": 1599, 
              "id": "boxPub", 
              "borderColor": "black", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 77, 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 399, 
              "borderWidth": 1, 
              "backgroundColor": "#FBFFD3", 
              "hidden": "", 
              "align": "", 
              "left": 5
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "0a5ec26c2f6140268d517d750f46128b", 
              "height": 1600, 
              "id": "boxPriv", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 76, 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 395, 
              "borderWidth": 1, 
              "backgroundColor": "#D0FFCE", 
              "hidden": "", 
              "align": "", 
              "left": 410
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "YUCCA - data from Arduino YUN", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblTitolo", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 6, 
              "!type": "Label", 
              "children": [], 
              "width": 476, 
              "fontSize": 30, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "5b82f702f4504ddba37cb50fa169e83b", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 167
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Raw data configured as public stream. \nBasic Authentication with user and password", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblPub", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 81, 
              "!type": "Label", 
              "children": [], 
              "width": 357, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "0676bb20fc5d4825a6f80f5735a516b5", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 22
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Internal stream configured as private stream. Oauth 2.0 token required", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblPriv", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 80, 
              "!type": "Label", 
              "children": [], 
              "width": 357, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "0676bb20fc5d4825a6f80f5735a516b5", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 424
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "User:", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblUser", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 137, 
              "!type": "Label", 
              "children": [], 
              "width": 48, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "5cf59003d2f049688ca816d04d750b3a", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 24
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "color": "", 
              "height": 25, 
              "disabled": "", 
              "fontFamily": "", 
              "autocapitalize": "on", 
              "onchange": "", 
              "children": [], 
              "inputType": "text", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "autocorrect": "on", 
              "!type": "TextBox_jqm14", 
              "readonly": "", 
              "id": "txtUser", 
              "width": 95, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "onblur": "", 
              "onclick": "", 
              "onmouseout": "", 
              "onkeypress": "", 
              "max": "", 
              "class": "", 
              "_uuid": "7b8add478ea247c395de1cea7c953b41", 
              "bottom": "auto", 
              "required": "", 
              "fontWeight": "", 
              "step": "any", 
              "onmousedown": "", 
              "placeholder": "Inserisci il testo qui", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "clearButton": "", 
              "align": "left", 
              "min": "", 
              "expanded_pmp": true, 
              "value": "guest", 
              "autocomplete": "on", 
              "ontouchmove": "", 
              "maxlength": "", 
              "onkeyup": "", 
              "ontouchstart": "", 
              "top": 132, 
              "left": 73
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Password:", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblPWD", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "137", 
              "!type": "Label", 
              "children": [], 
              "width": 70, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "41a01ef17e5841cfb63ad331d48dc065", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 180
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "color": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "autocapitalize": "on", 
              "onchange": "", 
              "children": [], 
              "inputType": "text", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "autocorrect": "on", 
              "!type": "TextBox_jqm14", 
              "readonly": "", 
              "id": "txtPWD", 
              "width": 110, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "onblur": "", 
              "onclick": "", 
              "onmouseout": "", 
              "onkeypress": "", 
              "max": "", 
              "class": "", 
              "_uuid": "ca8e8cf1789740678c7607081ce2a940", 
              "bottom": "auto", 
              "required": "", 
              "fontWeight": "", 
              "step": "any", 
              "onmousedown": "", 
              "placeholder": "Inserisci il testo qui", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "clearButton": "", 
              "align": "left", 
              "min": "", 
              "expanded_pmp": true, 
              "value": "Aekieh6F", 
              "autocomplete": "on", 
              "ontouchmove": "", 
              "maxlength": "", 
              "onkeyup": "", 
              "ontouchstart": "", 
              "top": 132, 
              "left": 268
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Oauth Token:", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblToken", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 136, 
              "!type": "Label", 
              "children": [], 
              "width": 114, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "3c21766d4fe04510a42df55c794ef8de", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 424
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "color": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "autocapitalize": "on", 
              "onchange": "", 
              "children": [], 
              "inputType": "text", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "autocorrect": "on", 
              "!type": "TextBox_jqm14", 
              "readonly": "", 
              "id": "txtToken", 
              "width": 244, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "onblur": "", 
              "onclick": "", 
              "onmouseout": "", 
              "onkeypress": "", 
              "max": "", 
              "class": "", 
              "_uuid": "2a9afddbeb094aecacf7c5e02543e265", 
              "bottom": "auto", 
              "required": "", 
              "fontWeight": "", 
              "step": "any", 
              "onmousedown": "", 
              "placeholder": "Inserisci il testo qui", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "clearButton": "", 
              "align": "left", 
              "min": "", 
              "expanded_pmp": true, 
              "value": "XGwU5SO1AV4kneNtZsNvGH6Qxh0a", 
              "autocomplete": "on", 
              "ontouchmove": "", 
              "maxlength": "", 
              "onkeyup": "", 
              "ontouchstart": "", 
              "top": "132", 
              "left": 538
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Stream:", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblStream", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 170, 
              "!type": "Label", 
              "children": [], 
              "width": 67, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "bda18bcdd0894de8ab6acc15f083f1fd", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 23
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Stream:", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblStream2", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 170, 
              "!type": "Label", 
              "children": [], 
              "width": 67, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "bda18bcdd0894de8ab6acc15f083f1fd", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 419
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "color": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "autocapitalize": "on", 
              "onchange": "", 
              "children": [], 
              "inputType": "text", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "autocorrect": "on", 
              "!type": "TextBox_jqm14", 
              "readonly": "", 
              "id": "txtStream1", 
              "width": 297, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "onblur": "", 
              "onclick": "", 
              "onmouseout": "", 
              "onkeypress": "", 
              "max": "", 
              "class": "", 
              "_uuid": "e533a03c81774896ac8ef0f1cbf706d5", 
              "bottom": "auto", 
              "required": "", 
              "fontWeight": "", 
              "step": "any", 
              "onmousedown": "", 
              "placeholder": "Inserisci il testo qui", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "clearButton": "", 
              "align": "left", 
              "min": "", 
              "expanded_pmp": true, 
              "value": "/topic/output.smartlab.922c0438-9dfd-4ce2-fd3c-b17960b189cb_environment", 
              "autocomplete": "on", 
              "ontouchmove": "", 
              "maxlength": "", 
              "onkeyup": "", 
              "ontouchstart": "", 
              "top": 166, 
              "left": 86
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "color": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "autocapitalize": "on", 
              "onchange": "", 
              "children": [], 
              "inputType": "text", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "autocorrect": "on", 
              "!type": "TextBox_jqm14", 
              "readonly": "", 
              "id": "txtStream2", 
              "width": 297, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "onblur": "", 
              "onclick": "", 
              "onmouseout": "", 
              "onkeypress": "", 
              "max": "", 
              "class": "", 
              "_uuid": "e533a03c81774896ac8ef0f1cbf706d5", 
              "bottom": "auto", 
              "required": "", 
              "fontWeight": "", 
              "step": "any", 
              "onmousedown": "", 
              "placeholder": "Inserisci il testo qui", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "clearButton": "", 
              "align": "left", 
              "min": "", 
              "expanded_pmp": true, 
              "value": "/topic/output.smartlab.internal_environcorrect", 
              "autocomplete": "on", 
              "ontouchmove": "", 
              "maxlength": "", 
              "onkeyup": "", 
              "ontouchstart": "", 
              "top": 166, 
              "left": 485
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "groupBegin": "", 
              "color": "", 
              "image": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "onchange": "", 
              "children": [], 
              "borderColor": "", 
              "ChangeForm": "", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "top": 207, 
              "!type": "Button_jqm14", 
              "id": "btnConnect", 
              "width": 100, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "icon": "", 
              "onclick": "btnConnect_onclick()", 
              "onmouseout": "", 
              "class": "", 
              "_uuid": "00129f3c268a435dadd02d4bbd90173a", 
              "padding": "", 
              "fontWeight": "", 
              "onmousedown": "", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "ontouchmove": "", 
              "corners": "", 
              "bottom": "auto", 
              "expanded_pmp": true, 
              "value": "Connect", 
              "iconPos": "none", 
              "groupEnd": "", 
              "ontouchstart": "", 
              "left": 150
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "groupBegin": "", 
              "color": "", 
              "image": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "onchange": "", 
              "children": [], 
              "borderColor": "", 
              "ChangeForm": "", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "top": "207", 
              "!type": "Button_jqm14", 
              "id": "btnConnect2", 
              "width": 100, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "icon": "", 
              "onclick": "btnConnect2_onclick()", 
              "onmouseout": "", 
              "class": "", 
              "_uuid": "00129f3c268a435dadd02d4bbd90173a", 
              "padding": "", 
              "fontWeight": "", 
              "onmousedown": "", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "ontouchmove": "", 
              "corners": "", 
              "bottom": "auto", 
              "expanded_pmp": true, 
              "value": "Connect", 
              "iconPos": "none", 
              "groupEnd": "", 
              "ontouchstart": "", 
              "left": 558
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "9a3abd52318b45828eee4506714549c8", 
              "height": "1", 
              "id": "Line1", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 252, 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": "384", 
              "borderWidth": 1, 
              "backgroundColor": "grigio", 
              "hidden": "", 
              "align": "", 
              "left": 10
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "9a3abd52318b45828eee4506714549c8", 
              "height": "1", 
              "id": "Line2", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "252", 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": "384", 
              "borderWidth": 1, 
              "backgroundColor": "grigio", 
              "hidden": "", 
              "align": "", 
              "left": "407"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "89bbb6aba2974a9c9061af556b164a8f", 
              "height": 113, 
              "onmousedown": "", 
              "id": "Termometro", 
              "src": "img/termometro.png", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 286, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 364, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 22
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Temperature", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblTemperatura", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 263, 
              "!type": "Label", 
              "children": [], 
              "width": 229, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "415f97226cd647ba9de37f903d15cd1a", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 25
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Temperature", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblTemperatura2", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 263, 
              "!type": "Label", 
              "children": [], 
              "width": 248, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "415f97226cd647ba9de37f903d15cd1a", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 420
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "015868260263485eabc937bf36c863d6", 
              "height": "17", 
              "id": "Line3", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "334", 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 217, 
              "borderWidth": 0, 
              "backgroundColor": "#E5E4BE", 
              "hidden": "", 
              "align": "", 
              "left": 108
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "89bbb6aba2974a9c9061af556b164a8f", 
              "height": 113, 
              "onmousedown": "", 
              "id": "Termometro2", 
              "src": "img/termometro.png", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 288, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 364, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 419
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "015868260263485eabc937bf36c863d6", 
              "height": "17", 
              "id": "Line4", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 336, 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 217, 
              "borderWidth": 0, 
              "backgroundColor": "#E5E4BE", 
              "hidden": "", 
              "align": "", 
              "left": 505
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "015868260263485eabc937bf36c863d6", 
              "height": "17", 
              "id": "lTemp1", 
              "borderColor": "#E55F4A", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "334", 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": "100", 
              "borderWidth": 0, 
              "backgroundColor": "#E55F4A", 
              "hidden": "", 
              "align": "", 
              "left": "108"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "URL Server Stream", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "Label1", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 50, 
              "!type": "Label", 
              "children": [], 
              "width": 164, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "4cc33a9efe834066ba75504cb81c2044", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 53
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "color": "", 
              "height": 26, 
              "disabled": "", 
              "fontFamily": "", 
              "autocapitalize": "on", 
              "onchange": "", 
              "children": [], 
              "inputType": "text", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "autocorrect": "on", 
              "!type": "TextBox_jqm14", 
              "readonly": "", 
              "id": "txtServer", 
              "width": 386, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "onblur": "", 
              "onclick": "", 
              "onmouseout": "", 
              "onkeypress": "", 
              "max": "", 
              "class": "", 
              "_uuid": "1b71f9b8f7d74fc2bd9c489a959be3f7", 
              "bottom": "auto", 
              "required": "", 
              "fontWeight": "", 
              "step": "any", 
              "onmousedown": "", 
              "placeholder": "Inserisci il testo qui", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "clearButton": "", 
              "align": "left", 
              "min": "", 
              "expanded_pmp": true, 
              "value": "ws://stream.smartdatanet.it/ws", 
              "autocomplete": "on", 
              "ontouchmove": "", 
              "maxlength": "", 
              "onkeyup": "", 
              "ontouchstart": "", 
              "top": 45, 
              "left": 212
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Mainenance Mode", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblButton", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 489, 
              "!type": "Label", 
              "children": [], 
              "width": 128, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "df9fd8e5d5a74d1d909afe90228e646f", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 16
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "3eff0fdc80954e7dbdb9c04417cd8160", 
              "height": 80, 
              "onmousedown": "", 
              "id": "imgButton", 
              "src": "img/luceoff.png", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 531, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 62, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 36
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "f1f90c99c5cb4445be76b6f4905cbf28", 
              "height": 108, 
              "onmousedown": "", 
              "id": "imgIgro", 
              "src": "img/igro.png", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 478, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 205, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 170
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "0 %", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblIgro", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 514, 
              "!type": "Label", 
              "children": [], 
              "width": 127, 
              "fontSize": 32, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "2ba24cae6aba4aba930f34ffc3962270", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "center", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 209
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "a351fd160484430a8013f5c55fe63f2d", 
              "height": 53, 
              "onmousedown": "", 
              "id": "imgLux", 
              "src": "img/lux.jpg", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 415, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 313, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 73
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Light", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lLightT", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 418, 
              "!type": "Label", 
              "children": [], 
              "width": 48, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "7e61d3c846a344ef89b75780cc7af582", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 21
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "015868260263485eabc937bf36c863d6", 
              "height": 31, 
              "id": "lLum", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 421, 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 284, 
              "borderWidth": 0, 
              "backgroundColor": "black", 
              "hidden": "", 
              "align": "", 
              "left": 85
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "0", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lPerc", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 440, 
              "!type": "Label", 
              "children": [], 
              "width": 46, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "4a989c4928b44c97bae448ad2aa1beb6", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "center", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 20
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "time", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblTS1", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "263", 
              "!type": "Label", 
              "children": [], 
              "width": 177, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "8e89df0638a540d59794a13137235063", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "right", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 212
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "time", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblTS2", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 263, 
              "!type": "Label", 
              "children": [], 
              "width": 177, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "8e89df0638a540d59794a13137235063", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "right", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 608
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "015868260263485eabc937bf36c863d6", 
              "height": "17", 
              "id": "lTemp2", 
              "borderColor": "#E55F4A", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "336", 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": "100", 
              "borderWidth": 0, 
              "backgroundColor": "#E55F4A", 
              "hidden": "", 
              "align": "", 
              "left": 505
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "f1f90c99c5cb4445be76b6f4905cbf28", 
              "height": 108, 
              "onmousedown": "", 
              "id": "imgIgroCopy", 
              "src": "img/igro.png", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 413, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 205, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 579
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "0 %", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "lblIgro2", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 447, 
              "!type": "Label", 
              "children": [], 
              "width": 127, 
              "fontSize": 32, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "2ba24cae6aba4aba930f34ffc3962270", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "center", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 618
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onmouseout": "", 
              "onclick": "", 
              "class": "", 
              "_uuid": "753e7d9a07b94fae82eaffd6efe6d23c", 
              "height": 181, 
              "onmousedown": "", 
              "id": "imgLux2", 
              "src": "img/lux.png", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "ontouchend": "", 
              "bottom": "auto", 
              "ontouchmove": "", 
              "top": 442, 
              "script": "", 
              "!type": "Image", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 149, 
              "onmousemove": "", 
              "onmouseup": "", 
              "hidden": "", 
              "ontouchstart": "", 
              "left": 419
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "0 %", 
              "height": 26, 
              "fontFamily": "helvetica", 
              "id": "lblLux", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 500, 
              "!type": "Label", 
              "children": [], 
              "width": 89, 
              "fontSize": 24, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "2ba24cae6aba4aba930f34ffc3962270", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "center", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 447
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "LUX% evaluated by platform\n\nbutton pressed = NO DATA", 
              "height": 51, 
              "fontFamily": "helvetica", 
              "id": "lblMessage", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 570, 
              "!type": "Label", 
              "children": [], 
              "width": 219, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "ba7721a317f94312bf847967b1bc2b3b", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 573
            }, 
            {
              "mini": "data-mini=true", 
              "right": "auto", 
              "cached_js": "", 
              "height": "auto", 
              "disabled": "", 
              "onchange": "", 
              "id": "FlipToggle1", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 15, 
              "!type": "FlipToggle_jqm14", 
              "children": [], 
              "width": "auto", 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "onfocus": "", 
              "onclick": "FlipToggle1_onclick()", 
              "onmouseout": "", 
              "_uuid": "64eb51dcbc3044c48645cceecf4464ad", 
              "titleLeft": "Off", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "hidden": "", 
              "name": "", 
              "ontouchmove": "", 
              "corners": "false", 
              "script": "", 
              "expanded_pmp": true, 
              "ontouchstart": "", 
              "titleRight": "On", 
              "left": 713
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "groupBegin": "", 
              "color": "", 
              "image": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "onchange": "", 
              "children": [], 
              "borderColor": "", 
              "ChangeForm": "", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "top": 633, 
              "!type": "Button_jqm14", 
              "id": "btnOAuth1", 
              "width": 100, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "icon": "", 
              "onclick": "btnOAuth1_onclick()", 
              "onmouseout": "", 
              "class": "", 
              "_uuid": "a57c49d7c64a487eb9fcc002215e68af", 
              "padding": "", 
              "fontWeight": "", 
              "onmousedown": "", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "ontouchmove": "", 
              "corners": "", 
              "bottom": "auto", 
              "expanded_pmp": true, 
              "value": "Get Data", 
              "iconPos": "none", 
              "groupEnd": "", 
              "ontouchstart": "", 
              "left": 298
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "innerHTML": "", 
              "height": "300", 
              "disabled": "", 
              "fontFamily": "helvetica", 
              "scroll_options": "mouseWheel:true, scrollbars:true, bounce: false, zoom:true", 
              "onchange": "", 
              "id": "chart1", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 675, 
              "!type": "HTMLview", 
              "children": [], 
              "width": 381, 
              "fontSize": 13, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "white", 
              "onmouseout": "", 
              "_uuid": "5da2e2d91f054473a55202c93990b4ee", 
              "fontWeight": "normal", 
              "overflow": "auto", 
              "onmousedown": "", 
              "scrolling": "false", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "contenteditable": "", 
              "name": "", 
              "onfocus": "", 
              "ontouchmove": "", 
              "script": "", 
              "expanded_pmp": true, 
              "borderStyle": "groove", 
              "ontouchstart": "", 
              "left": "13"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "innerHTML": "", 
              "height": "300", 
              "disabled": "", 
              "fontFamily": "helvetica", 
              "scroll_options": "mouseWheel:true, scrollbars:true, bounce: false, zoom:true", 
              "onchange": "", 
              "id": "chart2", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "1000", 
              "!type": "HTMLview", 
              "children": [], 
              "width": 381, 
              "fontSize": 13, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "white", 
              "onmouseout": "", 
              "_uuid": "5da2e2d91f054473a55202c93990b4ee", 
              "fontWeight": "normal", 
              "overflow": "auto", 
              "onmousedown": "", 
              "scrolling": "false", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "contenteditable": "", 
              "name": "", 
              "onfocus": "", 
              "ontouchmove": "", 
              "script": "", 
              "expanded_pmp": true, 
              "borderStyle": "groove", 
              "ontouchstart": "", 
              "left": "14"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "innerHTML": "", 
              "height": "300", 
              "disabled": "", 
              "fontFamily": "helvetica", 
              "scroll_options": "mouseWheel:true, scrollbars:true, bounce: false, zoom:true", 
              "onchange": "", 
              "id": "chart3", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "1325", 
              "!type": "HTMLview", 
              "children": [], 
              "width": 381, 
              "fontSize": 13, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "white", 
              "onmouseout": "", 
              "_uuid": "5da2e2d91f054473a55202c93990b4ee", 
              "fontWeight": "normal", 
              "overflow": "auto", 
              "onmousedown": "", 
              "scrolling": "false", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "contenteditable": "", 
              "name": "", 
              "onfocus": "", 
              "ontouchmove": "", 
              "script": "", 
              "expanded_pmp": true, 
              "borderStyle": "groove", 
              "ontouchstart": "", 
              "left": "13"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "innerHTML": "", 
              "height": "300", 
              "disabled": "", 
              "fontFamily": "helvetica", 
              "scroll_options": "mouseWheel:true, scrollbars:true, bounce: false, zoom:true", 
              "onchange": "", 
              "id": "chart1o", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "675", 
              "!type": "HTMLview", 
              "children": [], 
              "width": 381, 
              "fontSize": 13, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "white", 
              "onmouseout": "", 
              "_uuid": "5da2e2d91f054473a55202c93990b4ee", 
              "fontWeight": "normal", 
              "overflow": "auto", 
              "onmousedown": "", 
              "scrolling": "false", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "contenteditable": "", 
              "name": "", 
              "onfocus": "", 
              "ontouchmove": "", 
              "script": "", 
              "expanded_pmp": true, 
              "borderStyle": "groove", 
              "ontouchstart": "", 
              "left": "415"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "innerHTML": "", 
              "height": "300", 
              "disabled": "", 
              "fontFamily": "helvetica", 
              "scroll_options": "mouseWheel:true, scrollbars:true, bounce: false, zoom:true", 
              "onchange": "", 
              "id": "chart2o", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "1000", 
              "!type": "HTMLview", 
              "children": [], 
              "width": 381, 
              "fontSize": 13, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "white", 
              "onmouseout": "", 
              "_uuid": "5da2e2d91f054473a55202c93990b4ee", 
              "fontWeight": "normal", 
              "overflow": "auto", 
              "onmousedown": "", 
              "scrolling": "false", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "contenteditable": "", 
              "name": "", 
              "onfocus": "", 
              "ontouchmove": "", 
              "script": "", 
              "expanded_pmp": true, 
              "borderStyle": "groove", 
              "ontouchstart": "", 
              "left": "415"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "innerHTML": "", 
              "height": "300", 
              "disabled": "", 
              "fontFamily": "helvetica", 
              "scroll_options": "mouseWheel:true, scrollbars:true, bounce: false, zoom:true", 
              "onchange": "", 
              "id": "chart3o", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "1325", 
              "!type": "HTMLview", 
              "children": [], 
              "width": 381, 
              "fontSize": 13, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "white", 
              "onmouseout": "", 
              "_uuid": "5da2e2d91f054473a55202c93990b4ee", 
              "fontWeight": "normal", 
              "overflow": "auto", 
              "onmousedown": "", 
              "scrolling": "false", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "contenteditable": "", 
              "name": "", 
              "onfocus": "", 
              "ontouchmove": "", 
              "script": "", 
              "expanded_pmp": true, 
              "borderStyle": "groove", 
              "ontouchstart": "", 
              "left": "415"
            }, 
            {
              "mini": "ui-mini", 
              "right": "auto", 
              "cached_js": "", 
              "groupBegin": "", 
              "color": "", 
              "image": "", 
              "height": "auto", 
              "disabled": "", 
              "fontFamily": "", 
              "onchange": "", 
              "children": [], 
              "borderColor": "", 
              "ChangeForm": "", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "script": "", 
              "top": 635, 
              "!type": "Button_jqm14", 
              "id": "btnOAuth2", 
              "width": 100, 
              "theme": "", 
              "onmousemove": "", 
              "onmouseup": "", 
              "fontSize": "", 
              "hidden": "", 
              "icon": "", 
              "onclick": "btnOAuth2_onclick()", 
              "onmouseout": "", 
              "class": "", 
              "_uuid": "a57c49d7c64a487eb9fcc002215e68af", 
              "padding": "", 
              "fontWeight": "", 
              "onmousedown": "", 
              "onfocus": "", 
              "backgroundColor": "", 
              "ontouchend": "", 
              "fontStyle": "", 
              "name": "", 
              "ontouchmove": "", 
              "corners": "", 
              "bottom": "auto", 
              "expanded_pmp": true, 
              "value": "Get Data", 
              "iconPos": "none", 
              "groupEnd": "", 
              "ontouchstart": "", 
              "left": 698
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "9a3abd52318b45828eee4506714549c8", 
              "height": "1", 
              "id": "Line1b", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "630", 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": "384", 
              "borderWidth": 1, 
              "backgroundColor": "grigio", 
              "hidden": "", 
              "align": "", 
              "left": "10"
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "9a3abd52318b45828eee4506714549c8", 
              "height": "1", 
              "id": "Line2b", 
              "borderColor": "gray", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": "630", 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": "384", 
              "borderWidth": 1, 
              "backgroundColor": "grigio", 
              "hidden": "", 
              "align": "", 
              "left": "415"
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Odata API Call", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "Label2", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 646, 
              "!type": "Label", 
              "children": [], 
              "width": 142, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "aa8eb05dd29d44d499c0bfd2e75fe902", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 19
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Odata API Call", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "Label2Copy", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 646, 
              "!type": "Label", 
              "children": [], 
              "width": 142, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "aa8eb05dd29d44d499c0bfd2e75fe902", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 429
            }, 
            {
              "right": "auto", 
              "cached_js": "", 
              "onclick": "", 
              "color": "black", 
              "text": "Light", 
              "height": "auto", 
              "fontFamily": "helvetica", 
              "id": "Label3", 
              "borderColor": "transparent", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 421, 
              "!type": "Label", 
              "children": [], 
              "width": 70, 
              "fontSize": 16, 
              "onmouseup": "", 
              "onmousemove": "", 
              "hidden": "", 
              "backgroundColor": "trasparente", 
              "onmouseout": "", 
              "_uuid": "e229639c1e944677837fa69558981202", 
              "fontWeight": "bold", 
              "onmousedown": "", 
              "class": "", 
              "ontouchend": "", 
              "fontStyle": "normal", 
              "ontouchmove": "", 
              "align": "left", 
              "script": "", 
              "alignVertical": "top", 
              "expanded_pmp": true, 
              "borderWidth": 1, 
              "borderStyle": "", 
              "ontouchstart": "", 
              "left": 419
            }, 
            {
              "right": "10", 
              "cached_js": "", 
              "class": "", 
              "_uuid": "f04fb99165cb4150891cadd8c0ee72a3", 
              "height": 1609, 
              "id": "lineHide", 
              "borderColor": "#F9F9F9", 
              "borderStyle": "solid", 
              "style": "", 
              "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
              "bottom": "auto", 
              "top": 76, 
              "script": "", 
              "!type": "Line", 
              "expanded_pmp": true, 
              "children": [], 
              "width": 401, 
              "borderWidth": 1, 
              "backgroundColor": "#F9F9F9", 
              "hidden": "", 
              "align": "", 
              "left": 409
            }
          ], 
          "width": 820, 
          "action": "", 
          "setFocusID": "", 
          "method": "GET", 
          "left": 0
        }, 
        {
          "src": "js/stomp.js", 
          "cached_js_script_hash": "cb892bf0895e0f3703bad5db0745a889", 
          "cached_js": "// Generated by CoffeeScript 1.3.3\r\n(function() {\r\n  var Byte, Client, Frame, Stomp,\r\n    __hasProp = {}.hasOwnProperty;\r\n  \r\n  var MAX_FRAME_SIZE=16*1024;;\r\n  \r\n  Byte = {\r\n    LF: '\\x0A',\r\n    NULL: '\\x00'\r\n  };\r\n\r\n  Frame = (function() {\r\n\r\n    function Frame(command, headers, body) {\r\n      this.command = command;\r\n      this.headers = headers != null ? headers : {};\r\n      this.body = body != null ? body : '';\r\n    }\r\n\r\n    Frame.prototype.toString = function() {\r\n      var lines, name, value, _ref;\r\n      lines = [this.command];\r\n      _ref = this.headers;\r\n      for (name in _ref) {\r\n        if (!__hasProp.call(_ref, name)) continue;\r\n        value = _ref[name];\r\n        lines.push(\"\" + name + \":\" + value);\r\n      }\r\n      if (this.body) {\r\n        lines.push(\"content-length:\" + ('' + this.body).length);\r\n      }\r\n      lines.push(Byte.LF + this.body);\r\n      return lines.join(Byte.LF);\r\n    };\r\n\r\n    Frame._unmarshallSingle = function(data) {\r\n      var body, chr, command, divider, headerLines, headers, i, idx, len, line, start, trim, _i, _j, _ref, _ref1;\r\n      divider = data.search(RegExp(\"\" + Byte.LF + Byte.LF));\r\n      headerLines = data.substring(0, divider).split(Byte.LF);\r\n      command = headerLines.shift();\r\n      headers = {};\r\n      trim = function(str) {\r\n        return str.replace(/^\\s+|\\s+$/g, '');\r\n      };\r\n      line = idx = null;\r\n      for (i = _i = 0, _ref = headerLines.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\r\n        line = headerLines[i];\r\n        idx = line.indexOf(':');\r\n        headers[trim(line.substring(0, idx))] = trim(line.substring(idx + 1));\r\n      }\r\n      body = '';\r\n      start = divider + 2;\r\n      if (headers['content-length']) {\r\n        len = parseInt(headers['content-length']);\r\n        body = ('' + data).substring(start, start + len);\r\n      } else {\r\n        chr = null;\r\n        for (i = _j = start, _ref1 = data.length; start <= _ref1 ? _j < _ref1 : _j > _ref1; i = start <= _ref1 ? ++_j : --_j) {\r\n          chr = data.charAt(i);\r\n          if (chr === Byte.NULL) {\r\n            break;\r\n          }\r\n          body += chr;\r\n        }\r\n      }\r\n      return new Frame(command, headers, body);\r\n    };\r\n\r\n    Frame.unmarshall = function(datas) {\r\n      var data;\r\n      return (function() {\r\n        var _i, _len, _ref, _results;\r\n        _ref = datas.split(RegExp(\"\" + Byte.NULL + Byte.LF + \"*\"));\r\n        _results = [];\r\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n          data = _ref[_i];\r\n          if ((data != null ? data.length : void 0) > 0) {\r\n            _results.push(Frame._unmarshallSingle(data));\r\n          }\r\n        }\r\n        return _results;\r\n      })();\r\n    };\r\n\r\n    Frame.marshall = function(command, headers, body) {\r\n      var frame;\r\n      frame = new Frame(command, headers, body);\r\n      return frame.toString() + Byte.NULL;\r\n    };\r\n\r\n    return Frame;\r\n\r\n  })();\r\n\r\n  Client = (function() {\r\n\r\n    function Client(ws) {\r\n      this.ws = ws;\r\n      this.ws.binaryType = \"arraybuffer\";\r\n      this.counter = 0;\r\n      this.connected = false;\r\n      this.heartbeat = {\r\n        outgoing: 10000,\r\n        incoming: 10000\r\n      };\r\n      this.subscriptions = {};\r\n    }\r\n\r\n    Client.prototype._transmit = function(command, headers, body) {\r\n      var out;\r\n      out = Frame.marshall(command, headers, body);\r\n      if (typeof this.debug === \"function\") {\r\n        this.debug(\">>> \" + out);\r\n      }\r\n      while( true) {\r\n        if( out.length > MAX_FRAME_SIZE ) {\r\n          this.ws.send(out.substring(0, MAX_FRAME_SIZE));\r\n          out = out.substring(MAX_FRAME_SIZE);\r\n        } else {\r\n          return this.ws.send(out);\r\n        }\r\n      }\r\n    };\r\n\r\n    Client.prototype._setupHeartbeat = function(headers) {\r\n      var serverIncoming, serverOutgoing, ttl, v, _ref, _ref1,\r\n        _this = this;\r\n      if ((_ref = headers.version) !== Stomp.VERSIONS.V1_1 && _ref !== Stomp.VERSIONS.V1_2) {\r\n        return;\r\n      }\r\n      _ref1 = (function() {\r\n        var _i, _len, _ref1, _results;\r\n        _ref1 = headers['heart-beat'].split(\",\");\r\n        _results = [];\r\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n          v = _ref1[_i];\r\n          _results.push(parseInt(v));\r\n        }\r\n        return _results;\r\n      })(), serverOutgoing = _ref1[0], serverIncoming = _ref1[1];\r\n      if (!(this.heartbeat.outgoing === 0 || serverIncoming === 0)) {\r\n        ttl = Math.max(this.heartbeat.outgoing, serverIncoming);\r\n        if (typeof this.debug === \"function\") {\r\n          this.debug(\"send PING every \" + ttl + \"ms\");\r\n        }\r\n        this.pinger = typeof window !== \"undefined\" && window !== null ? window.setInterval(function() {\r\n          _this.ws.send(Byte.LF);\r\n          return typeof _this.debug === \"function\" ? _this.debug(\">>> PING\") : void 0;\r\n        }, ttl) : void 0;\r\n      }\r\n      if (!(this.heartbeat.incoming === 0 || serverOutgoing === 0)) {\r\n        ttl = Math.max(this.heartbeat.incoming, serverOutgoing);\r\n        if (typeof this.debug === \"function\") {\r\n          this.debug(\"check PONG every \" + ttl + \"ms\");\r\n        }\r\n        return this.ponger = typeof window !== \"undefined\" && window !== null ? window.setInterval(function() {\r\n          var delta;\r\n          delta = Date.now() - _this.serverActivity;\r\n          if (delta > ttl * 2) {\r\n            if (typeof _this.debug === \"function\") {\r\n              _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\r\n            }\r\n            return _this._cleanUp();\r\n          }\r\n        }, ttl) : void 0;\r\n      }\r\n    };\r\n\r\n    Client.prototype.connect = function(login, passcode, connectCallback, errorCallback, vhost) {\r\n      var _this = this;\r\n      this.connectCallback = connectCallback;\r\n      if (typeof this.debug === \"function\") {\r\n        this.debug(\"Opening Web Socket...\");\r\n      }\r\n      this.ws.onmessage = function(evt) {\r\n        var arr, c, data, frame, onreceive, _i, _len, _ref, _results;\r\n        data = typeof ArrayBuffer !== 'undefined' && evt.data instanceof ArrayBuffer ? (arr = new Uint8Array(evt.data), typeof _this.debug === \"function\" ? _this.debug(\"--- got data length: \" + arr.length) : void 0, ((function() {\r\n          var _i, _len, _results;\r\n          _results = [];\r\n          for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n            c = arr[_i];\r\n            _results.push(String.fromCharCode(c));\r\n          }\r\n          return _results;\r\n        })()).join('')) : evt.data;\r\n        _this.serverActivity = Date.now();\r\n        if (data === Byte.LF) {\r\n          if (typeof _this.debug === \"function\") {\r\n            _this.debug(\"<<< PONG\");\r\n          }\r\n          return;\r\n        }\r\n        if (typeof _this.debug === \"function\") {\r\n          _this.debug(\"<<< \" + data);\r\n        }\r\n        _ref = Frame.unmarshall(data);\r\n        _results = [];\r\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n          frame = _ref[_i];\r\n          switch (frame.command) {\r\n            case \"CONNECTED\":\r\n              if (typeof _this.debug === \"function\") {\r\n                _this.debug(\"connected to server \" + frame.headers.server);\r\n              }\r\n              _this.connected = true;\r\n              _this._setupHeartbeat(frame.headers);\r\n              _results.push(typeof _this.connectCallback === \"function\" ? _this.connectCallback(frame) : void 0);\r\n              break;\r\n            case \"MESSAGE\":\r\n              onreceive = _this.subscriptions[frame.headers.subscription];\r\n              _results.push(typeof onreceive === \"function\" ? onreceive(frame) : void 0);\r\n              break;\r\n            case \"RECEIPT\":\r\n              _results.push(typeof _this.onreceipt === \"function\" ? _this.onreceipt(frame) : void 0);\r\n              break;\r\n            case \"ERROR\":\r\n              _results.push(typeof errorCallback === \"function\" ? errorCallback(frame) : void 0);\r\n              break;\r\n            default:\r\n              _results.push(typeof _this.debug === \"function\" ? _this.debug(\"Unhandled frame: \" + frame) : void 0);\r\n          }\r\n        }\r\n        return _results;\r\n      };\r\n      this.ws.onclose = function() {\r\n        var msg;\r\n        msg = \"Whoops! Lost connection to \" + _this.ws.url;\r\n        if (typeof _this.debug === \"function\") {\r\n          _this.debug(msg);\r\n        }\r\n        return typeof errorCallback === \"function\" ? errorCallback(msg) : void 0;\r\n      };\r\n      return this.ws.onopen = function() {\r\n        var headers;\r\n        if (typeof _this.debug === \"function\") {\r\n          _this.debug('Web Socket Opened...');\r\n        }\r\n        headers = {\r\n          \"accept-version\": Stomp.VERSIONS.supportedVersions(),\r\n          \"heart-beat\": [_this.heartbeat.outgoing, _this.heartbeat.incoming].join(',')\r\n        };\r\n        if (vhost) {\r\n          headers.host = vhost;\r\n        }\r\n        if (login) {\r\n          headers.login = login;\r\n        }\r\n        if (passcode) {\r\n          headers.passcode = passcode;\r\n        }\r\n        return _this._transmit(\"CONNECT\", headers);\r\n      };\r\n    };\r\n\r\n    Client.prototype.disconnect = function(disconnectCallback) {\r\n      this._transmit(\"DISCONNECT\");\r\n      this.ws.onclose = null;\r\n      this._cleanUp();\r\n      return typeof disconnectCallback === \"function\" ? disconnectCallback() : void 0;\r\n    };\r\n\r\n    Client.prototype._cleanUp = function() {\r\n      this.ws.close();\r\n      this.connected = false;\r\n      if (this.pinger) {\r\n        if (typeof window !== \"undefined\" && window !== null) {\r\n          window.clearInterval(this.pinger);\r\n        }\r\n      }\r\n      if (this.ponger) {\r\n        return typeof window !== \"undefined\" && window !== null ? window.clearInterval(this.ponger) : void 0;\r\n      }\r\n    };\r\n\r\n    Client.prototype.send = function(destination, headers, body) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      if (body == null) {\r\n        body = '';\r\n      }\r\n      headers.destination = destination;\r\n      return this._transmit(\"SEND\", headers, body);\r\n    };\r\n\r\n    Client.prototype.subscribe = function(destination, callback, headers) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      if (!headers.id) {\r\n        headers.id = \"sub-\" + this.counter++;\r\n      }\r\n      headers.destination = destination;\r\n      this.subscriptions[headers.id] = callback;\r\n      this._transmit(\"SUBSCRIBE\", headers);\r\n      return headers.id;\r\n    };\r\n\r\n    Client.prototype.unsubscribe = function(id) {\r\n      delete this.subscriptions[id];\r\n      return this._transmit(\"UNSUBSCRIBE\", {\r\n        id: id\r\n      });\r\n    };\r\n\r\n    Client.prototype.begin = function(transaction) {\r\n      return this._transmit(\"BEGIN\", {\r\n        transaction: transaction\r\n      });\r\n    };\r\n\r\n    Client.prototype.commit = function(transaction) {\r\n      return this._transmit(\"COMMIT\", {\r\n        transaction: transaction\r\n      });\r\n    };\r\n\r\n    Client.prototype.abort = function(transaction) {\r\n      return this._transmit(\"ABORT\", {\r\n        transaction: transaction\r\n      });\r\n    };\r\n\r\n    Client.prototype.ack = function(messageID, subscription, headers) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      headers[\"message-id\"] = messageID;\r\n      headers.subscription = subscription;\r\n      return this._transmit(\"ACK\", headers);\r\n    };\r\n\r\n    Client.prototype.nack = function(messageID, subscription, headers) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      headers[\"message-id\"] = messageID;\r\n      headers.subscription = subscription;\r\n      return this._transmit(\"NACK\", headers);\r\n    };\r\n\r\n    return Client;\r\n\r\n  })();\r\n\r\n  Stomp = {\r\n    libVersion: \"2.0.0-next\",\r\n    VERSIONS: {\r\n      V1_0: '1.0',\r\n      V1_1: '1.1',\r\n      V1_2: '1.2',\r\n      supportedVersions: function() {\r\n        return '1.1,1.0';\r\n      }\r\n    },\r\n    client: function(url, protocols) {\r\n      var klass, ws;\r\n      if (protocols == null) {\r\n        protocols = ['v10.stomp', 'v11.stomp'];\r\n      }\r\n      klass = Stomp.WebSocketClass || WebSocket;\r\n      ws = new klass(url, protocols);\r\n      return new Client(ws);\r\n    },\r\n    over: function(ws) {\r\n      return new Client(ws);\r\n    },\r\n    Frame: Frame\r\n  };\r\n\r\n  if (typeof window !== \"undefined\" && window !== null) {\r\n    window.Stomp = Stomp;\r\n  } else {\r\n    exports.Stomp = Stomp;\r\n    Stomp.WebSocketClass = require('./test/server.mock.js').StompServerMock;\r\n  }\r\n\r\n}).call(this);", 
          "language": "JavaScript", 
          "script": "// Generated by CoffeeScript 1.3.3\r\n(function() {\r\n  var Byte, Client, Frame, Stomp,\r\n    __hasProp = {}.hasOwnProperty;\r\n  \r\n  var MAX_FRAME_SIZE=16*1024;;\r\n  \r\n  Byte = {\r\n    LF: '\\x0A',\r\n    NULL: '\\x00'\r\n  };\r\n\r\n  Frame = (function() {\r\n\r\n    function Frame(command, headers, body) {\r\n      this.command = command;\r\n      this.headers = headers != null ? headers : {};\r\n      this.body = body != null ? body : '';\r\n    }\r\n\r\n    Frame.prototype.toString = function() {\r\n      var lines, name, value, _ref;\r\n      lines = [this.command];\r\n      _ref = this.headers;\r\n      for (name in _ref) {\r\n        if (!__hasProp.call(_ref, name)) continue;\r\n        value = _ref[name];\r\n        lines.push(\"\" + name + \":\" + value);\r\n      }\r\n      if (this.body) {\r\n        lines.push(\"content-length:\" + ('' + this.body).length);\r\n      }\r\n      lines.push(Byte.LF + this.body);\r\n      return lines.join(Byte.LF);\r\n    };\r\n\r\n    Frame._unmarshallSingle = function(data) {\r\n      var body, chr, command, divider, headerLines, headers, i, idx, len, line, start, trim, _i, _j, _ref, _ref1;\r\n      divider = data.search(RegExp(\"\" + Byte.LF + Byte.LF));\r\n      headerLines = data.substring(0, divider).split(Byte.LF);\r\n      command = headerLines.shift();\r\n      headers = {};\r\n      trim = function(str) {\r\n        return str.replace(/^\\s+|\\s+$/g, '');\r\n      };\r\n      line = idx = null;\r\n      for (i = _i = 0, _ref = headerLines.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {\r\n        line = headerLines[i];\r\n        idx = line.indexOf(':');\r\n        headers[trim(line.substring(0, idx))] = trim(line.substring(idx + 1));\r\n      }\r\n      body = '';\r\n      start = divider + 2;\r\n      if (headers['content-length']) {\r\n        len = parseInt(headers['content-length']);\r\n        body = ('' + data).substring(start, start + len);\r\n      } else {\r\n        chr = null;\r\n        for (i = _j = start, _ref1 = data.length; start <= _ref1 ? _j < _ref1 : _j > _ref1; i = start <= _ref1 ? ++_j : --_j) {\r\n          chr = data.charAt(i);\r\n          if (chr === Byte.NULL) {\r\n            break;\r\n          }\r\n          body += chr;\r\n        }\r\n      }\r\n      return new Frame(command, headers, body);\r\n    };\r\n\r\n    Frame.unmarshall = function(datas) {\r\n      var data;\r\n      return (function() {\r\n        var _i, _len, _ref, _results;\r\n        _ref = datas.split(RegExp(\"\" + Byte.NULL + Byte.LF + \"*\"));\r\n        _results = [];\r\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n          data = _ref[_i];\r\n          if ((data != null ? data.length : void 0) > 0) {\r\n            _results.push(Frame._unmarshallSingle(data));\r\n          }\r\n        }\r\n        return _results;\r\n      })();\r\n    };\r\n\r\n    Frame.marshall = function(command, headers, body) {\r\n      var frame;\r\n      frame = new Frame(command, headers, body);\r\n      return frame.toString() + Byte.NULL;\r\n    };\r\n\r\n    return Frame;\r\n\r\n  })();\r\n\r\n  Client = (function() {\r\n\r\n    function Client(ws) {\r\n      this.ws = ws;\r\n      this.ws.binaryType = \"arraybuffer\";\r\n      this.counter = 0;\r\n      this.connected = false;\r\n      this.heartbeat = {\r\n        outgoing: 10000,\r\n        incoming: 10000\r\n      };\r\n      this.subscriptions = {};\r\n    }\r\n\r\n    Client.prototype._transmit = function(command, headers, body) {\r\n      var out;\r\n      out = Frame.marshall(command, headers, body);\r\n      if (typeof this.debug === \"function\") {\r\n        this.debug(\">>> \" + out);\r\n      }\r\n      while( true) {\r\n        if( out.length > MAX_FRAME_SIZE ) {\r\n          this.ws.send(out.substring(0, MAX_FRAME_SIZE));\r\n          out = out.substring(MAX_FRAME_SIZE);\r\n        } else {\r\n          return this.ws.send(out);\r\n        }\r\n      }\r\n    };\r\n\r\n    Client.prototype._setupHeartbeat = function(headers) {\r\n      var serverIncoming, serverOutgoing, ttl, v, _ref, _ref1,\r\n        _this = this;\r\n      if ((_ref = headers.version) !== Stomp.VERSIONS.V1_1 && _ref !== Stomp.VERSIONS.V1_2) {\r\n        return;\r\n      }\r\n      _ref1 = (function() {\r\n        var _i, _len, _ref1, _results;\r\n        _ref1 = headers['heart-beat'].split(\",\");\r\n        _results = [];\r\n        for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\r\n          v = _ref1[_i];\r\n          _results.push(parseInt(v));\r\n        }\r\n        return _results;\r\n      })(), serverOutgoing = _ref1[0], serverIncoming = _ref1[1];\r\n      if (!(this.heartbeat.outgoing === 0 || serverIncoming === 0)) {\r\n        ttl = Math.max(this.heartbeat.outgoing, serverIncoming);\r\n        if (typeof this.debug === \"function\") {\r\n          this.debug(\"send PING every \" + ttl + \"ms\");\r\n        }\r\n        this.pinger = typeof window !== \"undefined\" && window !== null ? window.setInterval(function() {\r\n          _this.ws.send(Byte.LF);\r\n          return typeof _this.debug === \"function\" ? _this.debug(\">>> PING\") : void 0;\r\n        }, ttl) : void 0;\r\n      }\r\n      if (!(this.heartbeat.incoming === 0 || serverOutgoing === 0)) {\r\n        ttl = Math.max(this.heartbeat.incoming, serverOutgoing);\r\n        if (typeof this.debug === \"function\") {\r\n          this.debug(\"check PONG every \" + ttl + \"ms\");\r\n        }\r\n        return this.ponger = typeof window !== \"undefined\" && window !== null ? window.setInterval(function() {\r\n          var delta;\r\n          delta = Date.now() - _this.serverActivity;\r\n          if (delta > ttl * 2) {\r\n            if (typeof _this.debug === \"function\") {\r\n              _this.debug(\"did not receive server activity for the last \" + delta + \"ms\");\r\n            }\r\n            return _this._cleanUp();\r\n          }\r\n        }, ttl) : void 0;\r\n      }\r\n    };\r\n\r\n    Client.prototype.connect = function(login, passcode, connectCallback, errorCallback, vhost) {\r\n      var _this = this;\r\n      this.connectCallback = connectCallback;\r\n      if (typeof this.debug === \"function\") {\r\n        this.debug(\"Opening Web Socket...\");\r\n      }\r\n      this.ws.onmessage = function(evt) {\r\n        var arr, c, data, frame, onreceive, _i, _len, _ref, _results;\r\n        data = typeof ArrayBuffer !== 'undefined' && evt.data instanceof ArrayBuffer ? (arr = new Uint8Array(evt.data), typeof _this.debug === \"function\" ? _this.debug(\"--- got data length: \" + arr.length) : void 0, ((function() {\r\n          var _i, _len, _results;\r\n          _results = [];\r\n          for (_i = 0, _len = arr.length; _i < _len; _i++) {\r\n            c = arr[_i];\r\n            _results.push(String.fromCharCode(c));\r\n          }\r\n          return _results;\r\n        })()).join('')) : evt.data;\r\n        _this.serverActivity = Date.now();\r\n        if (data === Byte.LF) {\r\n          if (typeof _this.debug === \"function\") {\r\n            _this.debug(\"<<< PONG\");\r\n          }\r\n          return;\r\n        }\r\n        if (typeof _this.debug === \"function\") {\r\n          _this.debug(\"<<< \" + data);\r\n        }\r\n        _ref = Frame.unmarshall(data);\r\n        _results = [];\r\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\r\n          frame = _ref[_i];\r\n          switch (frame.command) {\r\n            case \"CONNECTED\":\r\n              if (typeof _this.debug === \"function\") {\r\n                _this.debug(\"connected to server \" + frame.headers.server);\r\n              }\r\n              _this.connected = true;\r\n              _this._setupHeartbeat(frame.headers);\r\n              _results.push(typeof _this.connectCallback === \"function\" ? _this.connectCallback(frame) : void 0);\r\n              break;\r\n            case \"MESSAGE\":\r\n              onreceive = _this.subscriptions[frame.headers.subscription];\r\n              _results.push(typeof onreceive === \"function\" ? onreceive(frame) : void 0);\r\n              break;\r\n            case \"RECEIPT\":\r\n              _results.push(typeof _this.onreceipt === \"function\" ? _this.onreceipt(frame) : void 0);\r\n              break;\r\n            case \"ERROR\":\r\n              _results.push(typeof errorCallback === \"function\" ? errorCallback(frame) : void 0);\r\n              break;\r\n            default:\r\n              _results.push(typeof _this.debug === \"function\" ? _this.debug(\"Unhandled frame: \" + frame) : void 0);\r\n          }\r\n        }\r\n        return _results;\r\n      };\r\n      this.ws.onclose = function() {\r\n        var msg;\r\n        msg = \"Whoops! Lost connection to \" + _this.ws.url;\r\n        if (typeof _this.debug === \"function\") {\r\n          _this.debug(msg);\r\n        }\r\n        return typeof errorCallback === \"function\" ? errorCallback(msg) : void 0;\r\n      };\r\n      return this.ws.onopen = function() {\r\n        var headers;\r\n        if (typeof _this.debug === \"function\") {\r\n          _this.debug('Web Socket Opened...');\r\n        }\r\n        headers = {\r\n          \"accept-version\": Stomp.VERSIONS.supportedVersions(),\r\n          \"heart-beat\": [_this.heartbeat.outgoing, _this.heartbeat.incoming].join(',')\r\n        };\r\n        if (vhost) {\r\n          headers.host = vhost;\r\n        }\r\n        if (login) {\r\n          headers.login = login;\r\n        }\r\n        if (passcode) {\r\n          headers.passcode = passcode;\r\n        }\r\n        return _this._transmit(\"CONNECT\", headers);\r\n      };\r\n    };\r\n\r\n    Client.prototype.disconnect = function(disconnectCallback) {\r\n      this._transmit(\"DISCONNECT\");\r\n      this.ws.onclose = null;\r\n      this._cleanUp();\r\n      return typeof disconnectCallback === \"function\" ? disconnectCallback() : void 0;\r\n    };\r\n\r\n    Client.prototype._cleanUp = function() {\r\n      this.ws.close();\r\n      this.connected = false;\r\n      if (this.pinger) {\r\n        if (typeof window !== \"undefined\" && window !== null) {\r\n          window.clearInterval(this.pinger);\r\n        }\r\n      }\r\n      if (this.ponger) {\r\n        return typeof window !== \"undefined\" && window !== null ? window.clearInterval(this.ponger) : void 0;\r\n      }\r\n    };\r\n\r\n    Client.prototype.send = function(destination, headers, body) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      if (body == null) {\r\n        body = '';\r\n      }\r\n      headers.destination = destination;\r\n      return this._transmit(\"SEND\", headers, body);\r\n    };\r\n\r\n    Client.prototype.subscribe = function(destination, callback, headers) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      if (!headers.id) {\r\n        headers.id = \"sub-\" + this.counter++;\r\n      }\r\n      headers.destination = destination;\r\n      this.subscriptions[headers.id] = callback;\r\n      this._transmit(\"SUBSCRIBE\", headers);\r\n      return headers.id;\r\n    };\r\n\r\n    Client.prototype.unsubscribe = function(id) {\r\n      delete this.subscriptions[id];\r\n      return this._transmit(\"UNSUBSCRIBE\", {\r\n        id: id\r\n      });\r\n    };\r\n\r\n    Client.prototype.begin = function(transaction) {\r\n      return this._transmit(\"BEGIN\", {\r\n        transaction: transaction\r\n      });\r\n    };\r\n\r\n    Client.prototype.commit = function(transaction) {\r\n      return this._transmit(\"COMMIT\", {\r\n        transaction: transaction\r\n      });\r\n    };\r\n\r\n    Client.prototype.abort = function(transaction) {\r\n      return this._transmit(\"ABORT\", {\r\n        transaction: transaction\r\n      });\r\n    };\r\n\r\n    Client.prototype.ack = function(messageID, subscription, headers) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      headers[\"message-id\"] = messageID;\r\n      headers.subscription = subscription;\r\n      return this._transmit(\"ACK\", headers);\r\n    };\r\n\r\n    Client.prototype.nack = function(messageID, subscription, headers) {\r\n      if (headers == null) {\r\n        headers = {};\r\n      }\r\n      headers[\"message-id\"] = messageID;\r\n      headers.subscription = subscription;\r\n      return this._transmit(\"NACK\", headers);\r\n    };\r\n\r\n    return Client;\r\n\r\n  })();\r\n\r\n  Stomp = {\r\n    libVersion: \"2.0.0-next\",\r\n    VERSIONS: {\r\n      V1_0: '1.0',\r\n      V1_1: '1.1',\r\n      V1_2: '1.2',\r\n      supportedVersions: function() {\r\n        return '1.1,1.0';\r\n      }\r\n    },\r\n    client: function(url, protocols) {\r\n      var klass, ws;\r\n      if (protocols == null) {\r\n        protocols = ['v10.stomp', 'v11.stomp'];\r\n      }\r\n      klass = Stomp.WebSocketClass || WebSocket;\r\n      ws = new klass(url, protocols);\r\n      return new Client(ws);\r\n    },\r\n    over: function(ws) {\r\n      return new Client(ws);\r\n    },\r\n    Frame: Frame\r\n  };\r\n\r\n  if (typeof window !== \"undefined\" && window !== null) {\r\n    window.Stomp = Stomp;\r\n  } else {\r\n    exports.Stomp = Stomp;\r\n    Stomp.WebSocketClass = require('./test/server.mock.js').StompServerMock;\r\n  }\r\n\r\n}).call(this);", 
          "_uuid": "6309622293314548be43b6401cfdc634", 
          "!type": "Code", 
          "expanded_pmp": true, 
          "id": "stomp.js", 
          "children": []
        }
      ], 
      "description": "", 
      "extraheaders": "<script src='http://code.jquery.com/jquery-1.6.4.js'></script>\n<link rel=\"stylesheet\" href=\"http://cdn.jsdelivr.net/jqplot/1.0.4/jquery.jqplot.min.css\" />\n<script src=\"http://cdn.jsdelivr.net/jqplot/1.0.4/jquery.jqplot.min.js\"></script>\n<script src=\"http://cdn.jsdelivr.net/jqplot/1.0.4/plugins/jqplot.dateAxisRenderer.min.js\"></script>", 
      "onvisibilitychange": "", 
      "_uuid": "f35dd0056a134e02a5fa71c785af51e6", 
      "backgroundimage": "", 
      "phoneGapVersion": "", 
      "ondeviceorientation": "", 
      "icon": "nsb/images/LauncherIcon57.png", 
      "homescreenTitle": "", 
      "language": "BASIC", 
      "configxml": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<widget \nxmlns = \"http://www.w3.org/ns/widgets\"\nxmlns:gap = \"http://phonegap.com/ns/1.0\"\nid = \"com.nsbasic.{id}\"\nversionCode = \"10\"\nversion = \"{version}\">\n\n<name>{title}</name>\n<description>{description}</description>\n<preference name=\"phonegap-version\" value=\"{phoneGapVersion}\" />\n\n<!--\n<preference name=\"SplashScreenDelay\" value=\"2000\" />\n<gap:splash src=\"{splashscreen}\"/>\n<gap:splash src='splash/ios/Default.png' gap:platform='ios' width='320' height='480' />\n<gap:splash src='splash/ios/Default@2x.png' gap:platform='ios' width='640' height='960' />\n<gap:splash src='splash/ios/Default-568h@2x.png' gap:platform='ios' width='640' height='1136'\n<gap:splash src='splash/ios/Default-Portrait.png' gap:platform='ios' width='768' height='1024' />\n<gap:splash src='splash/ios/Default-Landscape.png' gap:platform='ios' width='1024' height='768' />\n<gap:splash src='splash/ios/Default-Portrait@2x.png' gap:platform='ios' width='1536' height='2048' />\n<gap:splash src='splash/ios/Default-Landscape@2x.png' gap:platform='ios' width='2048' height='1536' />\n-->\n<!-- Icons: Expand this section with sizes required for platforms you are targeting.-->\n<icon src=\"{icon}\" />\n<!--\n<icon src=\"icons/ios/icon.png\" gap:platform=\"ios\" width=\"57\" height=\"57\" />\n<icon src=\"icons/ios/icon-72.png\" gap:platform=\"ios\" width=\"72\" height=\"72\" />\n<icon src=\"icons/ios/icon_at_2x.png\" gap:platform=\"ios\" width=\"114\" height=\"114\" />\n<icon src=\"icons/ios/icon-72_at_2x.png\" gap:platform=\"ios\" width=\"144\" height=\"144\" />\n<icon src=\"icons/android/ldpi.png\" gap:platform=\"android\" gap:density=\"ldpi\" />\n<icon src=\"icons/android/mdpi.png\" gap:platform=\"android\" gap:density=\"mdpi\" />\n<icon src=\"icons/android/hdpi.png\" gap:platform=\"android\" gap:density=\"hdpi\" />\n<icon src=\"icons/android/xhdpi.png\" gap:platform=\"android\" gap:density=\"xhdpi\" />\n-->\n\n<preference name=\"permissions\" value=\"none\"/>\n<!-- sample preference specifications -->\n<!-- <preference name=\"autorotate\" value=\"false\" readonly=\"true\"/> -->\n<!-- <preference name=\"orientation\" value=\"default\" /> -->\n<!-- <preference name=\"fullscreen\" value=\"true\" /> -->\n\n<!-- Platforms: Customize as needed. -->\n<gap:platforms>\n   <gap:platform name=\"android\" minVersion=\"2.3\" />\n   <gap:platform name=\"ios\" />\n   <gap:platform name=\"winphone\" />\n</gap:platforms>\n</widget>", 
      "title": "YUCCA: data from Arduino", 
      "phoneGapLanguages": "en", 
      "defaultformsize": "960x540", 
      "_dbfiles": [], 
      "manifest": "", 
      "statusbar": "black-translucent", 
      "minimalUI": "", 
      "onorientationchange": "", 
      "splashscreen": "{_nsbdir}nsb/images/SplashScreen.png", 
      "hiddenheaders": ""
    }
  ], 
  "deploy_userName": "", 
  "deploy_global": true, 
  "cached_js": "", 
  "deploy_user": false, 
  "_uuid": "d5567a679a284d30b87173ee3d08fc85", 
  "_old_pal": false, 
  "deploy_port": "21", 
  "deploy_password": "", 
  "_tempdir": "/var/folders/15/1kq2pwn16dlgtkg00lxc10_40000gn/T/tmp8_l43C", 
  "deploy_localPath": "", 
  "deploy_path": "", 
  "phonegap_auth_token": "", 
  "id": "", 
  "deploy_protocol": "ftp", 
  "deploy_server": "", 
  "phonegap_password": "", 
  "cached_js_script_hash": "d41d8cd98f00b204e9800998ecf8427e", 
  "script": "", 
  "deploy_local": false, 
  "phonegap_email": "", 
  "!type": "Project", 
  "expanded_pmp": true, 
  "filename": "", 
  "libraries": [], 
  "_sample": false, 
  "version": 4, 
  "language_version": 7
}